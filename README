Elation DeepZoom Image Library
==============================


DeepZoom images are created from massive source images by breaking them into tiles of a fixed size.  First, we figure out the max level for a given image, using the following formula:


Then the source image is broken up into tiles for each detail level.  The max size of each level is 2ⁿ x 2ⁿ pixels.  


This library will figure out which tiles are needed to view a specific position of the image at any given scale, and compose them into tile layers.  These tile layers are then overlaid with different offsets to allow for seamlessly zooming from a tiny thumbnail all the way to the max resolution of the image.

Terminology
-----------
* imagesize (vec2)     - the width and height of the original full-size image

* maxlevel (int)       - the highest level needed to contain imagesize
                         maxlevel = ceil(log(max(imagesize.x, imagesize.y)) / LN2)

* levelsize (vec2)     - the width and height for this image level
                         levelsize = imagesize / 2^(maxlevel - level)

* viewport (vec2)      - the size of the active viewport

* bufferfactor (float) - margin factor for prefetching neighboring tiles

* tilesize (int)       - the size of each tile

* position (vec2)      - the current viewing position, as a fraction of imagesize
                         ie, (0, 0) is top left, (.5, .5) is center, (1,1) is top right


Tile layers
-----------
Each tile layer is centered around the position.  Given this position and a known viewport and bufferfactor, we are able to determine which tiles should be visible for this layer.  These tiles are composed together into one image per level.  An offset is determined for the given position, and the viewport is shifted by that amount.  This makes it very efficient to pan to different positions, as the combined tile image only needs to be redrawn when the set of visible tiles changes.


                             levelsize.x
╭──────────────────────────────────┴──────────────────────────────────╮
······································································· ╮
·         ·         ·         ·         ·         ·         ·         · │
·         ·         ·         ·         ·         ·         ·         · │
·   0_0   ·   1_0  viewport.x * bufferfactor      ·   5_0   ·   x_0   · │
·         ╭───────────────────┴───────────────────╮         ·         · │
··········┌─────────┬──┰──────┬─────────┬─────────┐ ╮·················· │
·         │         │  ╻ offset.y       │         │ │       ·         · │
·         │         │  ╻      │         │         │ │       ·         · │
·   0_1   │   1_1   │  ╻2_1   │   3_1   │   4_1   │ │ 5_1   ·   x_1   · │
·         │╸╸offset.x╸╸╔═╤══════════════════╗     │ │       ·         · │
··········├─────────┼──║ │                  ║─────┤ │·················· │
·         │         │  ║ │                  ║     │ │       ·         · │
·         │         │  ║ │                  ║     │ │       ·         · │
·   0_2   │   1_2   │  ║ │    position      ║_2   │ │ 5_2   ·   x_2   · │
·         │         │  ║ │       *          ║     │ │       ·         · │
··········├─────────┼──║ │                  ║─────┤ ├╴ viewport.y * bufferfactor
·         │         │  ║ viewport.y         ║     │ │       ·         · │
·         │         │  ║ │                  ║     │ │       ·         · ├╴levelsize.y
·   0_3   │   1_3   │  ╟─┼──viewport.x──────╢_3   │ │ 5_3   ·   x_3   · │
·         │         │  ╚═╧══════════════════╝     │ │       ·         · │
··········├─────────┼─────────┼─────────┼─────────┤ │·················· │
·         │         │         │         │         │ │       ·         · │
·         │         │         │         │         │ │       ·         · │
·   0_4   │   1_4   │   2_4   │   3_4   │   4_4   │ │ 5_4   ·   x_4   · │
·         │         │         │         │         │ │       ·         · │
··········└─────────┴─────────┴─────────┴─────────┘ ╯·················· │
·         ·         ·         ·         ·         ·         ·         · │
·         ·         ·         ·         ·         ·         ·         · │
·   0_y   ·   1_y   ·   2_y   ·   3_y   ·   4_y   ·   5_y   ·   x_y   · │
·         ·         ·         ·         ·         ·         ·         · │
······································································· ╯


                      _________      
                 ____╱        ╱_____ 
            ____╱   ╱        ╱     ╱_____
           ╱   ╱   ╱________╱     ╱     ╱
          ╱   ╱                  ╱     ╱
         ╱   ╱__________________╱     ╱
        ╱                            ╱
       ╱____________________________╱




    ⎧
    ⎪
    ⎪
    ⎪
foo ⎨
    ⎪
    ⎪
    ⎪
    ⎩

